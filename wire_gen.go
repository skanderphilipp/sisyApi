// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/skanderphilipp/sisyApi/internal"
	"github.com/skanderphilipp/sisyApi/internal/application/service"
	"github.com/skanderphilipp/sisyApi/internal/domain/artist"
	"github.com/skanderphilipp/sisyApi/internal/infrastructure/repository"
	"go.uber.org/zap"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeApp() (*internal.App, error) {
	db, err := repository.ProvideDatabase()
	if err != nil {
		return nil, err
	}
	artistRepository := provideArtistRepository(db)
	artistService := provideAritstService(artistRepository)
	logger, err := provideLogger()
	if err != nil {
		return nil, err
	}
	app := internal.NewApp(db, artistService, logger)
	return app, nil
}

// wire.go:

func provideLogger() (*zap.Logger, error) {
	logger, err := zap.NewDevelopment()
	return logger, err
}

func provideAritstService(repo artist.Repository) *service.ArtistService {
	return service.NewArtistService(repo)
}

func provideArtistRepository(db *gorm.DB) artist.Repository {
	return repository.NewArtistRepository(db)
}
