package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"

	"github.com/google/uuid"
	"github.com/skanderphilipp/sisyApi/internal/domain/models"
)

// CreateEvent is the resolver for the createEvent field.
func (r *mutationResolver) CreateEvent(ctx context.Context, input models.CreateEventInput) (*models.Event, error) {
	panic(fmt.Errorf("not implemented: CreateEvent - createEvent"))
}

// DeleteEvent is the resolver for the deleteEvent field.
func (r *mutationResolver) DeleteEvent(ctx context.Context, input models.DeleteEventInput) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteEvent - deleteEvent"))
}

// ListEvents is the resolver for the listEvents field.
func (r *queryResolver) ListEvents(ctx context.Context, first *int, after *string, last *int, before *string) (*models.EventConnection, error) {
	panic(fmt.Errorf("not implemented: ListEvents - listEvents"))
}

// GetEvent is the resolver for the getEvent field.
func (r *queryResolver) GetEvent(ctx context.Context, id uuid.UUID) (*models.Event, error) {
	panic(fmt.Errorf("not implemented: GetEvent - getEvent"))
}

// GetUpcomingEventsByVenue is the resolver for the getUpcomingEventsByVenue field.
func (r *queryResolver) GetUpcomingEventsByVenue(ctx context.Context, venueID uuid.UUID) (*models.EventConnection, error) {
	panic(fmt.Errorf("not implemented: GetUpcomingEventsByVenue - getUpcomingEventsByVenue"))
}

// GetPastEventsByVenue is the resolver for the getPastEventsByVenue field.
func (r *queryResolver) GetPastEventsByVenue(ctx context.Context, venueID uuid.UUID) (*models.EventConnection, error) {
	panic(fmt.Errorf("not implemented: GetPastEventsByVenue - getPastEventsByVenue"))
}

// GetAllUpcomingEvents is the resolver for the getAllUpcomingEvents field.
func (r *queryResolver) GetAllUpcomingEvents(ctx context.Context) (*models.EventConnection, error) {
	panic(fmt.Errorf("not implemented: GetAllUpcomingEvents - getAllUpcomingEvents"))
}

// GetTodayEvents is the resolver for the getTodayEvents field.
func (r *queryResolver) GetTodayEvents(ctx context.Context) (*models.EventConnection, error) {
	panic(fmt.Errorf("not implemented: GetTodayEvents - getTodayEvents"))
}

// GetTommorowEvents is the resolver for the getTommorowEvents field.
func (r *queryResolver) GetTommorowEvents(ctx context.Context) (*models.EventConnection, error) {
	panic(fmt.Errorf("not implemented: GetTommorowEvents - getTommorowEvents"))
}

// GetCurrentEvents is the resolver for the getCurrentEvents field.
func (r *queryResolver) GetCurrentEvents(ctx context.Context) (*models.EventConnection, error) {
	panic(fmt.Errorf("not implemented: GetCurrentEvents - getCurrentEvents"))
}

// GetEventsByVenue is the resolver for the getEventsByVenue field.
func (r *queryResolver) GetEventsByVenue(ctx context.Context, venueID uuid.UUID) (*models.EventConnection, error) {
	panic(fmt.Errorf("not implemented: GetEventsByVenue - getEventsByVenue"))
}

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *queryResolver) AllEvents(ctx context.Context) ([]*models.Event, error) {
	panic(fmt.Errorf("not implemented: AllEvents - allEvents"))
}
func (r *queryResolver) Event(ctx context.Context, id uuid.UUID) (*models.Event, error) {
	panic(fmt.Errorf("not implemented: Event - event"))
}
func (r *queryResolver) EventsByVenue(ctx context.Context, venueID uuid.UUID) ([]*models.Event, error) {
	panic(fmt.Errorf("not implemented: EventsByVenue - eventsByVenue"))
}
